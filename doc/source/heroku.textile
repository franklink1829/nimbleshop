h2. Heroku

endprologue.

h3. Deploying the application on heroku

Follow the instructions given below to deploy the application on heroku.

h4. Creating rails application

"Follow the instructions mentioned here":http://nimbleshop.org/getting_started.html and create a rails application.

h4. Getting heroku gem

<shell>
gem install heroku
gem update heroku
</shell>

h4. Changes to Gemfile

Open Gemfile of your application and add following lines.

<shell>
group :production, :staging do
  gem 'pg'
  gem 'thin'
  gem 'fog'
end

group :development, :test do
  gem 'sqlite3'
end
</shell>

Notice that in the last line I moved the line +gem 'sqlite3'+ inside the group +:development, :test+. Heroku does not work well with +sqlite3+ gem so ensure that this gem is only present for +development+ and +test+ group.


h4. Create a heroku application

<shell>
heroku create
</shell>

Let's say that our heroku app name is  +rocky-temple-39+ .

Create bucket for AWS S3. Login at "AWS Management Console":https://console.aws.amazon.com/s3/home and create a bucket. The bucket name could be anything like indichai-staging . It is recommended that you do not have a dot in the bucket name. Next configure aws s3 settings in the application.

<shell>
heroku config:add S3_ACCESS_KEY_ID=xxxxxxxxxxxxxx --app rocky-temple-39
heroku config:add S3_SECRET_ACCESS_KEY=xxxxxxxxxx --app rocky-temple-39
heroku config:add S3_BUCKET_NAME=xxxxxxxxxxxxxxxx --app rocky-temple-39
</shell>

h4. Push your code

<shell>
git push heroku master
</shell>

h4. Run migrations

Run migrations by executing following command.

<shell>
heroku run rake db:migrate --app rocky-temple-39
</shell>

h4. Run setup

Configure store with default settings and load products by executing following command.

<shell>
heroku run rake nimbleshop:setup:db --app rocky-temple-39
</shell>

h4. Visting site

Visit staging site at "http://rocky-temple-39.herokuapp.com":http://rocky-temple-39.herokuapp.com .
